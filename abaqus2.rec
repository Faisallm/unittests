# -*- coding: mbcs -*-
mdb.models.changeKey(fromName='Model-1', toName='SingleElementModel')
from part import *
from sketch import *
mdb.models['SingleElementModel'].Part(dimensionality=THREE_D, name=
    'SingleElementCube', type=DEFORMABLE_BODY)
mdb.models['SingleElementModel'].ConstrainedSketch(name='cubeSketch', 
    sheetSize=2.0)
mdb.models['SingleElementModel'].sketches['cubeSketch'].rectangle(point1=(0.0, 
    0.0), point2=(1.0, 1.0))
mdb.models['SingleElementModel'].parts['SingleElementCube'].BaseSolidExtrude(
    depth=1.0, sketch=mdb.models['SingleElementModel'].sketches['cubeSketch'])
from material import *
from section import *
mdb.models['SingleElementModel'].Material(name='AISI 1005 Steel')
mdb.models['SingleElementModel'].materials['AISI 1005 Steel'].Density(table=((
    7872, ), ))
mdb.models['SingleElementModel'].materials['AISI 1005 Steel'].Elastic(table=((
    200000000000.0, 0.29), ))
mdb.models['SingleElementModel'].HomogeneousSolidSection(material=
    'AISI 1005 Steel', name='cubeSection')
mdb.models['SingleElementModel'].parts['SingleElementCube'].SectionAssignment(
    region=Region(
    cells=mdb.models['SingleElementModel'].parts['SingleElementCube'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='cubeSection')
from assembly import *
mdb.models['SingleElementModel'].rootAssembly.regenerate()
mdb.models['SingleElementModel'].rootAssembly.Instance(dependent=ON, name=
    'cubeInstance', part=
    mdb.models['SingleElementModel'].parts['SingleElementCube'])
mdb.models['SingleElementModel'].StaticStep(description=
    'Apply controlled displacement in this step', initialInc=0.1, maxInc=0.1, 
    maxNumInc=100, minInc=1e-05, name='Displacement Step', nlgeom=OFF, 
    previous='Initial')
